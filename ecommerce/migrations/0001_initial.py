# Generated by Django 5.2 on 2025-10-17 01:34

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patronaje', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EstadoPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text="Identificador interno (p.ej. 'pendiente', 'diseño', ...).", max_length=20, unique=True)),
                ('nombre', models.CharField(help_text="Nombre legible del estado (p.ej. 'Pendiente', 'En Diseño', ...).", max_length=50)),
                ('orden', models.PositiveSmallIntegerField(help_text='Orden en que se presentan los estados (para listas y UI).')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción opcional del estado.')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Estado de Pedido',
                'verbose_name_plural': 'Estados de Pedido',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='PedidoPersonalizado',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pago_realizado', models.BooleanField(default=False, help_text='True si el pago ya se efectuó, False en caso contrario')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pedidos', to='patronaje.configuration')),
                ('disenador', models.ForeignKey(blank=True, help_text='Diseñador asignado al pedido', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos_como_disenador', to=settings.AUTH_USER_MODEL)),
                ('estado', models.ForeignKey(help_text='Estado actual del pedido', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pedidos', to='ecommerce.estadopedido')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_personalizados', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PedidoEstadoHistoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('notas', models.TextField(blank=True, help_text='Notas opcionales sobre el cambio')),
                ('estado', models.ForeignKey(help_text='Estado al que cambió el pedido', on_delete=django.db.models.deletion.PROTECT, to='ecommerce.estadopedido')),
                ('usuario', models.ForeignKey(help_text='Usuario que hizo el cambio', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historia_estados', to='ecommerce.pedidopersonalizado')),
            ],
            options={
                'verbose_name': 'Registro de Estado de Pedido',
                'verbose_name_plural': 'Historial de Estados de Pedido',
                'ordering': ['fecha'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveSmallIntegerField(help_text='Calificación numérica (por ejemplo 1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, help_text='Título corto de la reseña', max_length=255)),
                ('body', models.TextField(blank=True, help_text='Contenido/descripcion de la reseña')),
                ('reviewer_name', models.CharField(help_text='Nombre del autor de la reseña', max_length=150)),
                ('reviewer_avatar', models.URLField(blank=True, help_text='URL del avatar del autor', null=True)),
                ('reviewer_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha de la reseña')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('plantilla', models.ForeignKey(blank=True, help_text='Referencia opcional a la plantilla (templateId)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='patronaje.plantillaprenda')),
            ],
            options={
                'verbose_name': 'Reseña',
                'verbose_name_plural': 'Reseñas',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='PricingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('scope', models.CharField(choices=[('template', 'Template'), ('pattern', 'Pattern'), ('global', 'Global')], db_index=True, max_length=10)),
                ('condition', models.JSONField(blank=True, default=dict)),
                ('action', models.JSONField(blank=True, default=dict)),
                ('priority', models.IntegerField(db_index=True, default=0)),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('stop', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('target_pattern', models.ForeignKey(blank=True, help_text="Solo si scope='pattern'", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pricing_rules', to='patronaje.patronbase')),
                ('target_template', models.ForeignKey(blank=True, help_text="Solo si scope='template'", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pricing_rules', to='patronaje.plantillaprenda')),
            ],
            options={
                'verbose_name': 'Regla de Precio',
                'verbose_name_plural': 'Reglas de Precio',
                'ordering': ['priority', 'id'],
                'indexes': [models.Index(fields=['scope', 'priority'], name='ecommerce_p_scope_289a54_idx'), models.Index(fields=['target_template', 'priority'], name='ecommerce_p_target__3d325d_idx'), models.Index(fields=['target_pattern', 'priority'], name='ecommerce_p_target__db2c87_idx')],
            },
        ),
    ]
